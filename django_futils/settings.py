"""
Django settings for django-futils project.

Generated by 'django-admin startproject' using Django 3.1.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path
import os
from django.utils.translation import gettext_lazy as _
import django_futils.constants as const
import sys

# Required variables.
from SECRET_SETTINGS import SECRET_KEY, DB_NAME, DB_USER, DB_PASSWORD, DB_HOST, DB_PORT, MEDIA_ROOT, MEDIA_URL, INTERNAL_IPS, DEBUG, ALLOWED_HOSTS, LANGUAGE_CODE, TIME_ZONE, USE_X_FORWARDED_HOST, STATIC_URL, STATIC_ROOT_SUFFIX, STATICFILES_DIR_SUFFIX, LOCALE_DIR_SUFFIX

# Optional variables.
try:
    from SECRET_SETTINGS import NOMINATIM_URL
except ImportError:
    pass
try:
    from SECRET_SETTINGS import NOMINATIM_CACHE_TTL_SECONDS
except ImportError:
    pass
try:
    from SECRET_SETTINGS import OPENLAYERS_URL
except ImportError:
    pass
try:
    from SECRET_SETTINGS import FOREIGN_KEY_FIELDS
except ImportError:
    pass
try:
    from SECRET_SETTINGS import SIMPLE_HISTORY_REVERT_DISABLED
except ImportError:
    pass

BASE_DIR = Path(__file__).resolve(strict=True).parent.parent

LOCALE_PATHS = [os.path.join(BASE_DIR, LOCALE_DIR_SUFFIX)]

LANGUAGES = [
    ('it', _('Italian')),
    ('en', _('English')),
]

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# Application definition

INSTALLED_APPS = [
    'django.contrib.contenttypes',
    'simple_history',
    'vies',
    'phone_field',
    'django_countries',
    'django.contrib.gis',
    'django_extensions',
    'django_futils.apps.DjangoFutilsConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_cleanup.apps.CleanupConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'simple_history.middleware.HistoryRequestMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

AUTHENTICATION_BACKENDS = [
    # Django ModelBackend is the default authentication backend.
    'django.contrib.auth.backends.ModelBackend',
]

ROOT_URLCONF = 'django_futils.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.request',
            ],
            'loaders': [
                'django.template.loaders.filesystem.Loader',
                'django.template.loaders.app_directories.Loader',
            ],
        },
    },
]

WSGI_APPLICATION = 'django_futils.wsgi.application'

# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.contrib.gis.db.backends.postgis',
        'NAME': DB_NAME,
        'USER': DB_USER,
        'PASSWORD': DB_PASSWORD,
        'HOST': DB_HOST,
        'PORT': DB_PORT,
        'TEST': {
            'MIGRATE': True,
        },
    }
}


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/
USE_I18N = True
USE_L10N = True
USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/
STATIC_ROOT = os.path.join(BASE_DIR, STATIC_ROOT_SUFFIX)
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, STATICFILES_DIR_SUFFIX),
]

TEMPLATE_LOADERS = (
    ('django.template.loaders.cached.Loader', (
        'django.template.loaders.filesystem.Loader',
        'django.template.loaders.app_directories.Loader',
    )),
)

# Unit tests.
if 'test' in sys.argv:
    PASSWORD_HASHERS = [
        'django.contrib.auth.hashers.CryptPasswordHasher',
    ]
